{"version":3,"file":"static/js/566.ca20a9f8.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const StyledRow = styled(Row)`\n  flex-direction: ${({ direction }: { direction: string }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\n\nimport { ContentBlockProps } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport {\n  ContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n  StyledRow,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst ContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  button,\n  t,\n  id,\n  direction,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <ContentSection>\n      <Fade direction={direction} triggerOnce>\n        <StyledRow\n          justify=\"space-between\"\n          align=\"middle\"\n          id={id}\n          direction={direction}\n        >\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              {direction === \"right\" ? (\n                <ButtonWrapper>\n                  {typeof button === \"object\" &&\n                    button.map(\n                      (\n                        item: {\n                          color?: string;\n                          title: string;\n                        },\n                        id: number\n                      ) => {\n                        return (\n                          <Button\n                            key={id}\n                            color={item.color}\n                            onClick={() => scrollTo(\"about\")}\n                          >\n                            {t(item.title)}\n                          </Button>\n                        );\n                      }\n                    )}\n                </ButtonWrapper>\n              ) : (\n                <ServiceWrapper>\n                  <Row justify=\"space-between\">\n                    {typeof section === \"object\" &&\n                      section.map(\n                        (\n                          item: {\n                            title: string;\n                            content: string;\n                            icon: string;\n                          },\n                          id: number\n                        ) => {\n                          return (\n                            <Col key={id} span={11}>\n                              <SvgIcon\n                                src={item.icon}\n                                width=\"60px\"\n                                height=\"60px\"\n                              />\n                              <MinTitle>{t(item.title)}</MinTitle>\n                              <MinPara>{t(item.content)}</MinPara>\n                            </Col>\n                          );\n                        }\n                      )}\n                  </Row>\n                </ServiceWrapper>\n              )}\n            </ContentWrapper>\n          </Col>\n        </StyledRow>\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(ContentBlock);\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","t","id","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","span"],"sourceRoot":""}